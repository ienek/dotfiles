set -g prefix C-a                         # prefix key
set -g default-terminal "screen-256color" # terminal type
set -g aggressive-resize on               # aggressive resize
set -sg escape-time 0                     # escape time
set -g base-index 1                       # set initial window index to 1
set -g bell-action none                   # disable bell
setw -g xterm-keys on                     # enable xterm keys
setw -g mode-keys vi                      # enable vi mode keys

# vim copy-paste mode
bind Escape copy-mode
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# statusbar
set -g status-bg colour239
set -g status-fg white
set -g window-status-current-style fg=green,bold	# highlight currently active window in status bar with different color
set -g status-position top
set -g status-interval 1
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})'
set -g window-status-current-format '[#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})]'
set -g status-right-length 120
set -g status-right '#(date +"%b %_d %H:%M") | #(whoami)@#(hostname -s) '
set -g window-status-current-attr bold

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key | split-window -h
bind-key ! split-window -h
bind-key - split-window -v
bind-key _ split-window -v

# Navigate panes using jkhl (no prefix)
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Use Alt-vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window
bind -n M-K switch-client -p
bind -n M-J switch-client -n

# Start new session
bind-key C-c new-session \; command-prompt -p "New session name:" "rename-session '%%'"

# Kill session and go to previous one
bind-key C-x confirm-before -p "Kill session #S (y/n)?" "run-shell 'tmux switch-client -p \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"

# Man page
bind-key / command-prompt -p "Man page:" "split-window -h 'exec fish -l -c \"man %%\"'"

# Resize panes
bind-key C-j resize-pane -D 1
bind-key C-k resize-pane -U 1
bind-key C-h resize-pane -L 1
bind-key C-l resize-pane -R 1
bind-key C-J resize-pane -D 10
bind-key C-K resize-pane -U 10
bind-key C-H resize-pane -L 10
bind-key C-L resize-pane -R 10

# Integrate with vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-\ select-pane -l

bind a send-prefix # send ctrl-a
bind n new-window  # open new window
bind x kill-pane   # kill pane confirmation
bind k kill-window                               # kill window
